package it.clevercom.echo.hibernate.rd.postgresql.entity;
// Generated 19-apr-2017 15.19.48 by Hibernate Tools 5.2.2.Final


import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import org.hibernate.annotations.GenericGenerator;
import org.hibernate.annotations.Parameter;

/**
 * Modality generated by hbm2java
 */
@Entity
@Table(name="rd_modality"
)
public class Modality  implements java.io.Serializable {


     private Long idmodality;
     private OrganizationUnit organizationUnit;
     private String name;
     private String description;
     private Integer dailyservicecapacity;
     private Integer dailypatientcapacity;
     private Set<ModalityService> modalityServices = new HashSet<ModalityService>(0);
     private Set<ModalityDailyAllocation> modalityDailyAllocations = new HashSet<ModalityDailyAllocation>(0);
     private Set<WorkTask> workTasks = new HashSet<WorkTask>(0);

    public Modality() {
    }

	
    public Modality(OrganizationUnit organizationUnit, String name) {
        this.organizationUnit = organizationUnit;
        this.name = name;
    }
    public Modality(OrganizationUnit organizationUnit, String name, String description, Integer dailyservicecapacity, Integer dailypatientcapacity, Set<ModalityService> modalityServices, Set<ModalityDailyAllocation> modalityDailyAllocations, Set<WorkTask> workTasks) {
       this.organizationUnit = organizationUnit;
       this.name = name;
       this.description = description;
       this.dailyservicecapacity = dailyservicecapacity;
       this.dailypatientcapacity = dailypatientcapacity;
       this.modalityServices = modalityServices;
       this.modalityDailyAllocations = modalityDailyAllocations;
       this.workTasks = workTasks;
    }
   
     @GenericGenerator(name="generator", strategy="org.hibernate.id.enhanced.SequenceStyleGenerator", parameters={@Parameter(name="optimizer", value="none"), @Parameter(name="sequence_name", value="modality_idmodality_seq"), @Parameter(name="increment_size", value="1")})@Id @GeneratedValue(generator="generator")

    
    @Column(name="idmodality", unique=true, nullable=false)
    public Long getIdmodality() {
        return this.idmodality;
    }
    
    public void setIdmodality(Long idmodality) {
        this.idmodality = idmodality;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="idorganizationunit", nullable=false)
    public OrganizationUnit getOrganizationUnit() {
        return this.organizationUnit;
    }
    
    public void setOrganizationUnit(OrganizationUnit organizationUnit) {
        this.organizationUnit = organizationUnit;
    }

    
    @Column(name="name", nullable=false, length=100)
    public String getName() {
        return this.name;
    }
    
    public void setName(String name) {
        this.name = name;
    }

    
    @Column(name="description")
    public String getDescription() {
        return this.description;
    }
    
    public void setDescription(String description) {
        this.description = description;
    }

    
    @Column(name="dailyservicecapacity")
    public Integer getDailyservicecapacity() {
        return this.dailyservicecapacity;
    }
    
    public void setDailyservicecapacity(Integer dailyservicecapacity) {
        this.dailyservicecapacity = dailyservicecapacity;
    }

    
    @Column(name="dailypatientcapacity")
    public Integer getDailypatientcapacity() {
        return this.dailypatientcapacity;
    }
    
    public void setDailypatientcapacity(Integer dailypatientcapacity) {
        this.dailypatientcapacity = dailypatientcapacity;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="modality")
    public Set<ModalityService> getModalityServices() {
        return this.modalityServices;
    }
    
    public void setModalityServices(Set<ModalityService> modalityServices) {
        this.modalityServices = modalityServices;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="modality")
    public Set<ModalityDailyAllocation> getModalityDailyAllocations() {
        return this.modalityDailyAllocations;
    }
    
    public void setModalityDailyAllocations(Set<ModalityDailyAllocation> modalityDailyAllocations) {
        this.modalityDailyAllocations = modalityDailyAllocations;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="modality")
    public Set<WorkTask> getWorkTasks() {
        return this.workTasks;
    }
    
    public void setWorkTasks(Set<WorkTask> workTasks) {
        this.workTasks = workTasks;
    }




}


