package it.clevercom.echo.hibernate.rd.postgresql.entity;
// Generated 27-apr-2017 10.34.01 by Hibernate Tools 5.2.2.Final


import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import org.hibernate.annotations.GenericGenerator;
import org.hibernate.annotations.Parameter;

/**
 * WorkSession generated by hbm2java
 */
@Entity
@Table(name="rd_work_session"
)
public class WorkSession  implements java.io.Serializable {


     private Long idworksession;
     private Patient patient;
     private WorkStatus workStatus;
     private Set<WorkReport> workReports = new HashSet<WorkReport>(0);
     private Set<WorkTask> workTasks = new HashSet<WorkTask>(0);
     private Set<Order> orders = new HashSet<Order>(0);

    public WorkSession() {
    }

	
    public WorkSession(Patient patient, WorkStatus workStatus) {
        this.patient = patient;
        this.workStatus = workStatus;
    }
    public WorkSession(Patient patient, WorkStatus workStatus, Set<WorkReport> workReports, Set<WorkTask> workTasks, Set<Order> orders) {
       this.patient = patient;
       this.workStatus = workStatus;
       this.workReports = workReports;
       this.workTasks = workTasks;
       this.orders = orders;
    }
   
     @GenericGenerator(name="generator", strategy="org.hibernate.id.enhanced.SequenceStyleGenerator", parameters={@Parameter(name="optimizer", value="none"), @Parameter(name="sequence_name", value="worksession_idworksession_seq"), @Parameter(name="increment_size", value="1")})@Id @GeneratedValue(generator="generator")

    
    @Column(name="idworksession", unique=true, nullable=false)
    public Long getIdworksession() {
        return this.idworksession;
    }
    
    public void setIdworksession(Long idworksession) {
        this.idworksession = idworksession;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="idpatient", nullable=false)
    public Patient getPatient() {
        return this.patient;
    }
    
    public void setPatient(Patient patient) {
        this.patient = patient;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="idworkstatus", nullable=false)
    public WorkStatus getWorkStatus() {
        return this.workStatus;
    }
    
    public void setWorkStatus(WorkStatus workStatus) {
        this.workStatus = workStatus;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="workSession")
    public Set<WorkReport> getWorkReports() {
        return this.workReports;
    }
    
    public void setWorkReports(Set<WorkReport> workReports) {
        this.workReports = workReports;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="workSession")
    public Set<WorkTask> getWorkTasks() {
        return this.workTasks;
    }
    
    public void setWorkTasks(Set<WorkTask> workTasks) {
        this.workTasks = workTasks;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="workSession")
    public Set<Order> getOrders() {
        return this.orders;
    }
    
    public void setOrders(Set<Order> orders) {
        this.orders = orders;
    }




}


