package it.clevercom.echo.hibernate.tm.postgresql.entity;
// Generated 20-apr-2017 6.54.04 by Hibernate Tools 5.2.2.Final


import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Nurse generated by hbm2java
 */
@Entity
@Table(name="tm_nurse"
)
public class Nurse  implements java.io.Serializable {


     private Long idnurse;
     private String name;
     private String surname;
     private Character gender;
     private String telephone;
     private String skype;
     private Date dateofbirth;
     private String username;
     private Date created;
     private Date updated;
     private boolean active;
     private String updateuser;
     private Set<Patient> patients = new HashSet<Patient>(0);
     private Set<NurseOrganizationunit> nurseOrganizationunits = new HashSet<NurseOrganizationunit>(0);

    public Nurse() {
    }

	
    public Nurse(Long idnurse, String username, Date created, Date updated, boolean active, String updateuser) {
        this.idnurse = idnurse;
        this.username = username;
        this.created = created;
        this.updated = updated;
        this.active = active;
        this.updateuser = updateuser;
    }
    public Nurse(Long idnurse, String name, String surname, Character gender, String telephone, String skype, Date dateofbirth, String username, Date created, Date updated, boolean active, String updateuser, Set<Patient> patients, Set<NurseOrganizationunit> nurseOrganizationunits) {
       this.idnurse = idnurse;
       this.name = name;
       this.surname = surname;
       this.gender = gender;
       this.telephone = telephone;
       this.skype = skype;
       this.dateofbirth = dateofbirth;
       this.username = username;
       this.created = created;
       this.updated = updated;
       this.active = active;
       this.updateuser = updateuser;
       this.patients = patients;
       this.nurseOrganizationunits = nurseOrganizationunits;
    }
   
     @Id 

    
    @Column(name="idnurse", unique=true, nullable=false)
    public Long getIdnurse() {
        return this.idnurse;
    }
    
    public void setIdnurse(Long idnurse) {
        this.idnurse = idnurse;
    }

    
    @Column(name="name", length=100)
    public String getName() {
        return this.name;
    }
    
    public void setName(String name) {
        this.name = name;
    }

    
    @Column(name="surname", length=100)
    public String getSurname() {
        return this.surname;
    }
    
    public void setSurname(String surname) {
        this.surname = surname;
    }

    
    @Column(name="gender", length=1)
    public Character getGender() {
        return this.gender;
    }
    
    public void setGender(Character gender) {
        this.gender = gender;
    }

    
    @Column(name="telephone", length=100)
    public String getTelephone() {
        return this.telephone;
    }
    
    public void setTelephone(String telephone) {
        this.telephone = telephone;
    }

    
    @Column(name="skype", length=100)
    public String getSkype() {
        return this.skype;
    }
    
    public void setSkype(String skype) {
        this.skype = skype;
    }

    @Temporal(TemporalType.DATE)
    @Column(name="dateofbirth", length=13)
    public Date getDateofbirth() {
        return this.dateofbirth;
    }
    
    public void setDateofbirth(Date dateofbirth) {
        this.dateofbirth = dateofbirth;
    }

    
    @Column(name="username", nullable=false, length=100)
    public String getUsername() {
        return this.username;
    }
    
    public void setUsername(String username) {
        this.username = username;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="created", nullable=false, length=29)
    public Date getCreated() {
        return this.created;
    }
    
    public void setCreated(Date created) {
        this.created = created;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="updated", nullable=false, length=29)
    public Date getUpdated() {
        return this.updated;
    }
    
    public void setUpdated(Date updated) {
        this.updated = updated;
    }

    
    @Column(name="active", nullable=false)
    public boolean isActive() {
        return this.active;
    }
    
    public void setActive(boolean active) {
        this.active = active;
    }

    
    @Column(name="updateuser", nullable=false, length=100)
    public String getUpdateuser() {
        return this.updateuser;
    }
    
    public void setUpdateuser(String updateuser) {
        this.updateuser = updateuser;
    }

@ManyToMany(fetch=FetchType.LAZY)
    @JoinTable(name="tm_nurse_patient", joinColumns = { 
        @JoinColumn(name="idnurse", nullable=false, updatable=false) }, inverseJoinColumns = { 
        @JoinColumn(name="idpatient", nullable=false, updatable=false) })
    public Set<Patient> getPatients() {
        return this.patients;
    }
    
    public void setPatients(Set<Patient> patients) {
        this.patients = patients;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="nurse")
    public Set<NurseOrganizationunit> getNurseOrganizationunits() {
        return this.nurseOrganizationunits;
    }
    
    public void setNurseOrganizationunits(Set<NurseOrganizationunit> nurseOrganizationunits) {
        this.nurseOrganizationunits = nurseOrganizationunits;
    }




}


