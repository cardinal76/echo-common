package it.clevercom.echo.sso.model.entity;
// Generated 17-feb-2017 17.36.09 by Hibernate Tools 5.2.0.CR1

import java.util.Date;
import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * LoginApplication generated by hbm2java
 */
@Entity
@Table(name = "login_application")
public class LoginApplication implements java.io.Serializable {

	private LoginApplicationId id;
	private Application application;
	private Login login;
	private String authorities;
	private Date created;
	private Date updated;
	private String updateuser;
	private boolean active;

	public LoginApplication() {
	}

	public LoginApplication(LoginApplicationId id, Application application, Login login, String authorities,
			Date created, Date updated, String updateuser, boolean active) {
		this.id = id;
		this.application = application;
		this.login = login;
		this.authorities = authorities;
		this.created = created;
		this.updated = updated;
		this.updateuser = updateuser;
		this.active = active;
	}

	@EmbeddedId

	@AttributeOverrides({
			@AttributeOverride(name = "applicationIdapplication", column = @Column(name = "application_idapplication", nullable = false)),
			@AttributeOverride(name = "loginIdlogin", column = @Column(name = "login_idlogin", nullable = false)) })
	public LoginApplicationId getId() {
		return this.id;
	}

	public void setId(LoginApplicationId id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "application_idapplication", nullable = false, insertable = false, updatable = false)
	public Application getApplication() {
		return this.application;
	}

	public void setApplication(Application application) {
		this.application = application;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "login_idlogin", nullable = false, insertable = false, updatable = false)
	public Login getLogin() {
		return this.login;
	}

	public void setLogin(Login login) {
		this.login = login;
	}

	@Column(name = "authorities", nullable = false)
	public String getAuthorities() {
		return this.authorities;
	}

	public void setAuthorities(String authorities) {
		this.authorities = authorities;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "created", nullable = false, length = 29)
	public Date getCreated() {
		return this.created;
	}

	public void setCreated(Date created) {
		this.created = created;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "updated", nullable = false, length = 29)
	public Date getUpdated() {
		return this.updated;
	}

	public void setUpdated(Date updated) {
		this.updated = updated;
	}

	@Column(name = "updateuser", nullable = false, length = 100)
	public String getUpdateuser() {
		return this.updateuser;
	}

	public void setUpdateuser(String updateuser) {
		this.updateuser = updateuser;
	}

	@Column(name = "active", nullable = false)
	public boolean isActive() {
		return this.active;
	}

	public void setActive(boolean active) {
		this.active = active;
	}

}
