package it.clevercom.echo.rd.model.entity;
// Generated 21-feb-2017 16.05.29 by Hibernate Tools 5.2.0.CR1

import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

/**
 * ServiceCodingActor generated by hbm2java
 */
@Entity
@Table(name = "service_coding_actor")
public class ServiceCodingActor implements java.io.Serializable {

	private ServiceCodingActorId id;
	private CodingActor codingActor;
	private Service service;

	public ServiceCodingActor() {
	}

	public ServiceCodingActor(ServiceCodingActorId id, CodingActor codingActor, Service service) {
		this.id = id;
		this.codingActor = codingActor;
		this.service = service;
	}

	@EmbeddedId

	@AttributeOverrides({
			@AttributeOverride(name = "idservice", column = @Column(name = "idservice", nullable = false)),
			@AttributeOverride(name = "idcodingactor", column = @Column(name = "idcodingactor", nullable = false)),
			@AttributeOverride(name = "externalcode", column = @Column(name = "externalcode", nullable = false, length = 100)),
			@AttributeOverride(name = "created", column = @Column(name = "created", nullable = false, length = 29)),
			@AttributeOverride(name = "updated", column = @Column(name = "updated", nullable = false, length = 29)),
			@AttributeOverride(name = "userupdate", column = @Column(name = "userupdate", nullable = false, length = 100)),
			@AttributeOverride(name = "active", column = @Column(name = "active", nullable = false)) })
	public ServiceCodingActorId getId() {
		return this.id;
	}

	public void setId(ServiceCodingActorId id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "idcodingactor", nullable = false, insertable = false, updatable = false)
	public CodingActor getCodingActor() {
		return this.codingActor;
	}

	public void setCodingActor(CodingActor codingActor) {
		this.codingActor = codingActor;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "idservice", nullable = false, insertable = false, updatable = false)
	public Service getService() {
		return this.service;
	}

	public void setService(Service service) {
		this.service = service;
	}

}
