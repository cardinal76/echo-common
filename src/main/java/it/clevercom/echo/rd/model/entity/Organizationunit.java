package it.clevercom.echo.rd.model.entity;
// Generated 15-feb-2017 17.20.09 by Hibernate Tools 5.2.0.CR1

import java.io.Serializable;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * Organizationunit generated by hbm2java
 */
@Entity
@Table(name = "ORGANIZATIONUNIT")
public class Organizationunit implements java.io.Serializable {

	private long idorganizationunit;
	private Organizationunit organizationunit;
	private String name;
	private String description;
	private String address;
	private String telephone;
	private String email;
	private String fax;
	private String website;
	private String type;
	private Serializable created;
	private Serializable updated;
	private String userupdate;
	private short active;
	private Set<Organizationunit> organizationunits = new HashSet<Organizationunit>(0);
	private Set<Radiologyorder> radiologyordersForOriginorganizationunitid = new HashSet<Radiologyorder>(0);
	private Set<Radiologyorder> radiologyordersForTargetorganizationunitid = new HashSet<Radiologyorder>(0);
	private Set<Modality> modalities = new HashSet<Modality>(0);

	public Organizationunit() {
	}

	public Organizationunit(long idorganizationunit, Serializable created, Serializable updated, String userupdate,
			short active) {
		this.idorganizationunit = idorganizationunit;
		this.created = created;
		this.updated = updated;
		this.userupdate = userupdate;
		this.active = active;
	}

	public Organizationunit(long idorganizationunit, Organizationunit organizationunit, String name, String description,
			String address, String telephone, String email, String fax, String website, String type,
			Serializable created, Serializable updated, String userupdate, short active,
			Set<Organizationunit> organizationunits, Set<Radiologyorder> radiologyordersForOriginorganizationunitid,
			Set<Radiologyorder> radiologyordersForTargetorganizationunitid, Set<Modality> modalities) {
		this.idorganizationunit = idorganizationunit;
		this.organizationunit = organizationunit;
		this.name = name;
		this.description = description;
		this.address = address;
		this.telephone = telephone;
		this.email = email;
		this.fax = fax;
		this.website = website;
		this.type = type;
		this.created = created;
		this.updated = updated;
		this.userupdate = userupdate;
		this.active = active;
		this.organizationunits = organizationunits;
		this.radiologyordersForOriginorganizationunitid = radiologyordersForOriginorganizationunitid;
		this.radiologyordersForTargetorganizationunitid = radiologyordersForTargetorganizationunitid;
		this.modalities = modalities;
	}

	@Id

	@Column(name = "IDORGANIZATIONUNIT", unique = true, nullable = false, precision = 10, scale = 0)
	public long getIdorganizationunit() {
		return this.idorganizationunit;
	}

	public void setIdorganizationunit(long idorganizationunit) {
		this.idorganizationunit = idorganizationunit;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "PARENTID")
	public Organizationunit getOrganizationunit() {
		return this.organizationunit;
	}

	public void setOrganizationunit(Organizationunit organizationunit) {
		this.organizationunit = organizationunit;
	}

	@Column(name = "NAME", length = 100)
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@Column(name = "DESCRIPTION")
	public String getDescription() {
		return this.description;
	}

	public void setDescription(String description) {
		this.description = description;
	}

	@Column(name = "ADDRESS", length = 45)
	public String getAddress() {
		return this.address;
	}

	public void setAddress(String address) {
		this.address = address;
	}

	@Column(name = "TELEPHONE", length = 100)
	public String getTelephone() {
		return this.telephone;
	}

	public void setTelephone(String telephone) {
		this.telephone = telephone;
	}

	@Column(name = "EMAIL", length = 100)
	public String getEmail() {
		return this.email;
	}

	public void setEmail(String email) {
		this.email = email;
	}

	@Column(name = "FAX", length = 100)
	public String getFax() {
		return this.fax;
	}

	public void setFax(String fax) {
		this.fax = fax;
	}

	@Column(name = "WEBSITE", length = 100)
	public String getWebsite() {
		return this.website;
	}

	public void setWebsite(String website) {
		this.website = website;
	}

	@Column(name = "TYPE", length = 20)
	public String getType() {
		return this.type;
	}

	public void setType(String type) {
		this.type = type;
	}

	@Column(name = "CREATED", nullable = false)
	public Serializable getCreated() {
		return this.created;
	}

	public void setCreated(Serializable created) {
		this.created = created;
	}

	@Column(name = "UPDATED", nullable = false)
	public Serializable getUpdated() {
		return this.updated;
	}

	public void setUpdated(Serializable updated) {
		this.updated = updated;
	}

	@Column(name = "USERUPDATE", nullable = false, length = 100)
	public String getUserupdate() {
		return this.userupdate;
	}

	public void setUserupdate(String userupdate) {
		this.userupdate = userupdate;
	}

	@Column(name = "ACTIVE", nullable = false, precision = 3, scale = 0)
	public short getActive() {
		return this.active;
	}

	public void setActive(short active) {
		this.active = active;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "organizationunit")
	public Set<Organizationunit> getOrganizationunits() {
		return this.organizationunits;
	}

	public void setOrganizationunits(Set<Organizationunit> organizationunits) {
		this.organizationunits = organizationunits;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "organizationunitByOriginorganizationunitid")
	public Set<Radiologyorder> getRadiologyordersForOriginorganizationunitid() {
		return this.radiologyordersForOriginorganizationunitid;
	}

	public void setRadiologyordersForOriginorganizationunitid(
			Set<Radiologyorder> radiologyordersForOriginorganizationunitid) {
		this.radiologyordersForOriginorganizationunitid = radiologyordersForOriginorganizationunitid;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "organizationunitByTargetorganizationunitid")
	public Set<Radiologyorder> getRadiologyordersForTargetorganizationunitid() {
		return this.radiologyordersForTargetorganizationunitid;
	}

	public void setRadiologyordersForTargetorganizationunitid(
			Set<Radiologyorder> radiologyordersForTargetorganizationunitid) {
		this.radiologyordersForTargetorganizationunitid = radiologyordersForTargetorganizationunitid;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "organizationunit")
	public Set<Modality> getModalities() {
		return this.modalities;
	}

	public void setModalities(Set<Modality> modalities) {
		this.modalities = modalities;
	}

}
