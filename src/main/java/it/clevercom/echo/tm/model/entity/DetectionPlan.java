package it.clevercom.echo.tm.model.entity;
// Generated 17-feb-2017 16.34.42 by Hibernate Tools 5.2.0.CR1

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * DetectionPlan generated by hbm2java
 */
@Entity
@Table(name = "detection_plan")
public class DetectionPlan implements java.io.Serializable {

	private long iddetectionplan;
	private Patient patient;
	private String name;
	private String description;
	private Date validfrom;
	private Date validto;
	private Date created;
	private Date updated;
	private boolean active;
	private String updateuser;
	private Set<ClinicReport> clinicReports = new HashSet<ClinicReport>(0);
	private Set<DetectionTask> detectionTasks = new HashSet<DetectionTask>(0);

	public DetectionPlan() {
	}

	public DetectionPlan(long iddetectionplan, Patient patient, String name, Date created, Date updated, boolean active,
			String updateuser) {
		this.iddetectionplan = iddetectionplan;
		this.patient = patient;
		this.name = name;
		this.created = created;
		this.updated = updated;
		this.active = active;
		this.updateuser = updateuser;
	}

	public DetectionPlan(long iddetectionplan, Patient patient, String name, String description, Date validfrom,
			Date validto, Date created, Date updated, boolean active, String updateuser,
			Set<ClinicReport> clinicReports, Set<DetectionTask> detectionTasks) {
		this.iddetectionplan = iddetectionplan;
		this.patient = patient;
		this.name = name;
		this.description = description;
		this.validfrom = validfrom;
		this.validto = validto;
		this.created = created;
		this.updated = updated;
		this.active = active;
		this.updateuser = updateuser;
		this.clinicReports = clinicReports;
		this.detectionTasks = detectionTasks;
	}

	@Id

	@Column(name = "iddetectionplan", unique = true, nullable = false)
	public long getIddetectionplan() {
		return this.iddetectionplan;
	}

	public void setIddetectionplan(long iddetectionplan) {
		this.iddetectionplan = iddetectionplan;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "idpatient", nullable = false)
	public Patient getPatient() {
		return this.patient;
	}

	public void setPatient(Patient patient) {
		this.patient = patient;
	}

	@Column(name = "name", nullable = false, length = 100)
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@Column(name = "description")
	public String getDescription() {
		return this.description;
	}

	public void setDescription(String description) {
		this.description = description;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "validfrom", length = 13)
	public Date getValidfrom() {
		return this.validfrom;
	}

	public void setValidfrom(Date validfrom) {
		this.validfrom = validfrom;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "validto", length = 13)
	public Date getValidto() {
		return this.validto;
	}

	public void setValidto(Date validto) {
		this.validto = validto;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "created", nullable = false, length = 29)
	public Date getCreated() {
		return this.created;
	}

	public void setCreated(Date created) {
		this.created = created;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "updated", nullable = false, length = 29)
	public Date getUpdated() {
		return this.updated;
	}

	public void setUpdated(Date updated) {
		this.updated = updated;
	}

	@Column(name = "active", nullable = false)
	public boolean isActive() {
		return this.active;
	}

	public void setActive(boolean active) {
		this.active = active;
	}

	@Column(name = "updateuser", nullable = false, length = 100)
	public String getUpdateuser() {
		return this.updateuser;
	}

	public void setUpdateuser(String updateuser) {
		this.updateuser = updateuser;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "detectionPlan")
	public Set<ClinicReport> getClinicReports() {
		return this.clinicReports;
	}

	public void setClinicReports(Set<ClinicReport> clinicReports) {
		this.clinicReports = clinicReports;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "detectionPlan")
	public Set<DetectionTask> getDetectionTasks() {
		return this.detectionTasks;
	}

	public void setDetectionTasks(Set<DetectionTask> detectionTasks) {
		this.detectionTasks = detectionTasks;
	}

}
