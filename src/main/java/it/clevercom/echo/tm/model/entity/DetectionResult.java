package it.clevercom.echo.tm.model.entity;
// Generated 17-feb-2017 16.34.42 by Hibernate Tools 5.2.0.CR1

import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * DetectionResult generated by hbm2java
 */
@Entity
@Table(name = "detection_result")
public class DetectionResult implements java.io.Serializable {

	private long iddetectionresult;
	private DetectionTask detectionTask;
	private MeasurementType measurementType;
	private Double valuenum;
	private String valuestring;
	private Date created;
	private Date updated;
	private boolean active;
	private String updateuser;

	public DetectionResult() {
	}

	public DetectionResult(long iddetectionresult, DetectionTask detectionTask, MeasurementType measurementType,
			Date created, Date updated, boolean active, String updateuser) {
		this.iddetectionresult = iddetectionresult;
		this.detectionTask = detectionTask;
		this.measurementType = measurementType;
		this.created = created;
		this.updated = updated;
		this.active = active;
		this.updateuser = updateuser;
	}

	public DetectionResult(long iddetectionresult, DetectionTask detectionTask, MeasurementType measurementType,
			Double valuenum, String valuestring, Date created, Date updated, boolean active, String updateuser) {
		this.iddetectionresult = iddetectionresult;
		this.detectionTask = detectionTask;
		this.measurementType = measurementType;
		this.valuenum = valuenum;
		this.valuestring = valuestring;
		this.created = created;
		this.updated = updated;
		this.active = active;
		this.updateuser = updateuser;
	}

	@Id

	@Column(name = "iddetectionresult", unique = true, nullable = false)
	public long getIddetectionresult() {
		return this.iddetectionresult;
	}

	public void setIddetectionresult(long iddetectionresult) {
		this.iddetectionresult = iddetectionresult;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "iddetectiontask", nullable = false)
	public DetectionTask getDetectionTask() {
		return this.detectionTask;
	}

	public void setDetectionTask(DetectionTask detectionTask) {
		this.detectionTask = detectionTask;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "idmeasurementtype", nullable = false)
	public MeasurementType getMeasurementType() {
		return this.measurementType;
	}

	public void setMeasurementType(MeasurementType measurementType) {
		this.measurementType = measurementType;
	}

	@Column(name = "valuenum", precision = 17, scale = 17)
	public Double getValuenum() {
		return this.valuenum;
	}

	public void setValuenum(Double valuenum) {
		this.valuenum = valuenum;
	}

	@Column(name = "valuestring")
	public String getValuestring() {
		return this.valuestring;
	}

	public void setValuestring(String valuestring) {
		this.valuestring = valuestring;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "created", nullable = false, length = 29)
	public Date getCreated() {
		return this.created;
	}

	public void setCreated(Date created) {
		this.created = created;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "updated", nullable = false, length = 29)
	public Date getUpdated() {
		return this.updated;
	}

	public void setUpdated(Date updated) {
		this.updated = updated;
	}

	@Column(name = "active", nullable = false)
	public boolean isActive() {
		return this.active;
	}

	public void setActive(boolean active) {
		this.active = active;
	}

	@Column(name = "updateuser", nullable = false, length = 100)
	public String getUpdateuser() {
		return this.updateuser;
	}

	public void setUpdateuser(String updateuser) {
		this.updateuser = updateuser;
	}

}
