package it.clevercom.echo.tm.model.entity;
// Generated 17-feb-2017 16.34.42 by Hibernate Tools 5.2.0.CR1

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToMany;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.UniqueConstraint;

/**
 * Patient generated by hbm2java
 */
@Entity
@Table(name = "patient", uniqueConstraints = @UniqueConstraint(columnNames = "taxcode"))
public class Patient implements java.io.Serializable {

	private long idpatient;
	private Municipality municipality;
	private String name;
	private String surname;
	private Character gender;
	private String taxcode;
	private Date birthdate;
	private String nationality;
	private String homeaddress;
	private String phonenumber;
	private String username;
	private Date created;
	private Date updated;
	private boolean active;
	private String updateuser;
	private Set<TreatmentPlan> treatmentPlans = new HashSet<TreatmentPlan>(0);
	private Set<MeetingRequest> meetingRequests = new HashSet<MeetingRequest>(0);
	private Set<Message> messages = new HashSet<Message>(0);
	private Set<ClinicFolder> clinicFolders = new HashSet<ClinicFolder>(0);
	private Set<CustomThreshold> customThresholds = new HashSet<CustomThreshold>(0);
	private Set<DetectionPlan> detectionPlans = new HashSet<DetectionPlan>(0);
	private Set<PatientCaregiver> patientCaregivers = new HashSet<PatientCaregiver>(0);
	private Set<HealthkitPatient> healthkitPatients = new HashSet<HealthkitPatient>(0);
	private Set<Nurse> nurses = new HashSet<Nurse>(0);
	private Set<PhysicianPatient> physicianPatients = new HashSet<PhysicianPatient>(0);

	public Patient() {
	}

	public Patient(long idpatient, String username, Date created, Date updated, boolean active, String updateuser) {
		this.idpatient = idpatient;
		this.username = username;
		this.created = created;
		this.updated = updated;
		this.active = active;
		this.updateuser = updateuser;
	}

	public Patient(long idpatient, Municipality municipality, String name, String surname, Character gender,
			String taxcode, Date birthdate, String nationality, String homeaddress, String phonenumber, String username,
			Date created, Date updated, boolean active, String updateuser, Set<TreatmentPlan> treatmentPlans,
			Set<MeetingRequest> meetingRequests, Set<Message> messages, Set<ClinicFolder> clinicFolders,
			Set<CustomThreshold> customThresholds, Set<DetectionPlan> detectionPlans,
			Set<PatientCaregiver> patientCaregivers, Set<HealthkitPatient> healthkitPatients, Set<Nurse> nurses,
			Set<PhysicianPatient> physicianPatients) {
		this.idpatient = idpatient;
		this.municipality = municipality;
		this.name = name;
		this.surname = surname;
		this.gender = gender;
		this.taxcode = taxcode;
		this.birthdate = birthdate;
		this.nationality = nationality;
		this.homeaddress = homeaddress;
		this.phonenumber = phonenumber;
		this.username = username;
		this.created = created;
		this.updated = updated;
		this.active = active;
		this.updateuser = updateuser;
		this.treatmentPlans = treatmentPlans;
		this.meetingRequests = meetingRequests;
		this.messages = messages;
		this.clinicFolders = clinicFolders;
		this.customThresholds = customThresholds;
		this.detectionPlans = detectionPlans;
		this.patientCaregivers = patientCaregivers;
		this.healthkitPatients = healthkitPatients;
		this.nurses = nurses;
		this.physicianPatients = physicianPatients;
	}

	@Id

	@Column(name = "idpatient", unique = true, nullable = false)
	public long getIdpatient() {
		return this.idpatient;
	}

	public void setIdpatient(long idpatient) {
		this.idpatient = idpatient;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "idmunicipality")
	public Municipality getMunicipality() {
		return this.municipality;
	}

	public void setMunicipality(Municipality municipality) {
		this.municipality = municipality;
	}

	@Column(name = "name", length = 100)
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@Column(name = "surname", length = 100)
	public String getSurname() {
		return this.surname;
	}

	public void setSurname(String surname) {
		this.surname = surname;
	}

	@Column(name = "gender", length = 1)
	public Character getGender() {
		return this.gender;
	}

	public void setGender(Character gender) {
		this.gender = gender;
	}

	@Column(name = "taxcode", unique = true, length = 50)
	public String getTaxcode() {
		return this.taxcode;
	}

	public void setTaxcode(String taxcode) {
		this.taxcode = taxcode;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "birthdate", length = 13)
	public Date getBirthdate() {
		return this.birthdate;
	}

	public void setBirthdate(Date birthdate) {
		this.birthdate = birthdate;
	}

	@Column(name = "nationality", length = 100)
	public String getNationality() {
		return this.nationality;
	}

	public void setNationality(String nationality) {
		this.nationality = nationality;
	}

	@Column(name = "homeaddress", length = 100)
	public String getHomeaddress() {
		return this.homeaddress;
	}

	public void setHomeaddress(String homeaddress) {
		this.homeaddress = homeaddress;
	}

	@Column(name = "phonenumber", length = 100)
	public String getPhonenumber() {
		return this.phonenumber;
	}

	public void setPhonenumber(String phonenumber) {
		this.phonenumber = phonenumber;
	}

	@Column(name = "username", nullable = false, length = 100)
	public String getUsername() {
		return this.username;
	}

	public void setUsername(String username) {
		this.username = username;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "created", nullable = false, length = 29)
	public Date getCreated() {
		return this.created;
	}

	public void setCreated(Date created) {
		this.created = created;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "updated", nullable = false, length = 29)
	public Date getUpdated() {
		return this.updated;
	}

	public void setUpdated(Date updated) {
		this.updated = updated;
	}

	@Column(name = "active", nullable = false)
	public boolean isActive() {
		return this.active;
	}

	public void setActive(boolean active) {
		this.active = active;
	}

	@Column(name = "updateuser", nullable = false, length = 100)
	public String getUpdateuser() {
		return this.updateuser;
	}

	public void setUpdateuser(String updateuser) {
		this.updateuser = updateuser;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "patient")
	public Set<TreatmentPlan> getTreatmentPlans() {
		return this.treatmentPlans;
	}

	public void setTreatmentPlans(Set<TreatmentPlan> treatmentPlans) {
		this.treatmentPlans = treatmentPlans;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "patient")
	public Set<MeetingRequest> getMeetingRequests() {
		return this.meetingRequests;
	}

	public void setMeetingRequests(Set<MeetingRequest> meetingRequests) {
		this.meetingRequests = meetingRequests;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "patient")
	public Set<Message> getMessages() {
		return this.messages;
	}

	public void setMessages(Set<Message> messages) {
		this.messages = messages;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "patient")
	public Set<ClinicFolder> getClinicFolders() {
		return this.clinicFolders;
	}

	public void setClinicFolders(Set<ClinicFolder> clinicFolders) {
		this.clinicFolders = clinicFolders;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "patient")
	public Set<CustomThreshold> getCustomThresholds() {
		return this.customThresholds;
	}

	public void setCustomThresholds(Set<CustomThreshold> customThresholds) {
		this.customThresholds = customThresholds;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "patient")
	public Set<DetectionPlan> getDetectionPlans() {
		return this.detectionPlans;
	}

	public void setDetectionPlans(Set<DetectionPlan> detectionPlans) {
		this.detectionPlans = detectionPlans;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "patient")
	public Set<PatientCaregiver> getPatientCaregivers() {
		return this.patientCaregivers;
	}

	public void setPatientCaregivers(Set<PatientCaregiver> patientCaregivers) {
		this.patientCaregivers = patientCaregivers;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "patient")
	public Set<HealthkitPatient> getHealthkitPatients() {
		return this.healthkitPatients;
	}

	public void setHealthkitPatients(Set<HealthkitPatient> healthkitPatients) {
		this.healthkitPatients = healthkitPatients;
	}

	@ManyToMany(fetch = FetchType.LAZY, mappedBy = "patients")
	public Set<Nurse> getNurses() {
		return this.nurses;
	}

	public void setNurses(Set<Nurse> nurses) {
		this.nurses = nurses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "patient")
	public Set<PhysicianPatient> getPhysicianPatients() {
		return this.physicianPatients;
	}

	public void setPhysicianPatients(Set<PhysicianPatient> physicianPatients) {
		this.physicianPatients = physicianPatients;
	}

}
