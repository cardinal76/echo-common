package it.clevercom.echo.tm.model.entity;
// Generated 17-feb-2017 16.34.42 by Hibernate Tools 5.2.0.CR1

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * OrganizationUnit generated by hbm2java
 */
@Entity
@Table(name = "organization_unit")
public class OrganizationUnit implements java.io.Serializable {

	private long idorganizationunit;
	private OrganizationUnit organizationUnit;
	private String name;
	private String description;
	private String address;
	private String telephone;
	private String email;
	private String fax;
	private String website;
	private String type;
	private Date created;
	private Date updated;
	private boolean active;
	private String updateuser;
	private Set<ClinicFolder> clinicFolders = new HashSet<ClinicFolder>(0);
	private Set<PhysicianOrganizationunit> physicianOrganizationunits = new HashSet<PhysicianOrganizationunit>(0);
	private Set<NurseOrganizationunit> nurseOrganizationunits = new HashSet<NurseOrganizationunit>(0);
	private Set<OrganizationUnit> organizationUnits = new HashSet<OrganizationUnit>(0);

	public OrganizationUnit() {
	}

	public OrganizationUnit(long idorganizationunit, Date created, Date updated, boolean active, String updateuser) {
		this.idorganizationunit = idorganizationunit;
		this.created = created;
		this.updated = updated;
		this.active = active;
		this.updateuser = updateuser;
	}

	public OrganizationUnit(long idorganizationunit, OrganizationUnit organizationUnit, String name, String description,
			String address, String telephone, String email, String fax, String website, String type, Date created,
			Date updated, boolean active, String updateuser, Set<ClinicFolder> clinicFolders,
			Set<PhysicianOrganizationunit> physicianOrganizationunits,
			Set<NurseOrganizationunit> nurseOrganizationunits, Set<OrganizationUnit> organizationUnits) {
		this.idorganizationunit = idorganizationunit;
		this.organizationUnit = organizationUnit;
		this.name = name;
		this.description = description;
		this.address = address;
		this.telephone = telephone;
		this.email = email;
		this.fax = fax;
		this.website = website;
		this.type = type;
		this.created = created;
		this.updated = updated;
		this.active = active;
		this.updateuser = updateuser;
		this.clinicFolders = clinicFolders;
		this.physicianOrganizationunits = physicianOrganizationunits;
		this.nurseOrganizationunits = nurseOrganizationunits;
		this.organizationUnits = organizationUnits;
	}

	@Id

	@Column(name = "idorganizationunit", unique = true, nullable = false)
	public long getIdorganizationunit() {
		return this.idorganizationunit;
	}

	public void setIdorganizationunit(long idorganizationunit) {
		this.idorganizationunit = idorganizationunit;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "parentid")
	public OrganizationUnit getOrganizationUnit() {
		return this.organizationUnit;
	}

	public void setOrganizationUnit(OrganizationUnit organizationUnit) {
		this.organizationUnit = organizationUnit;
	}

	@Column(name = "name", length = 100)
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@Column(name = "description")
	public String getDescription() {
		return this.description;
	}

	public void setDescription(String description) {
		this.description = description;
	}

	@Column(name = "address", length = 45)
	public String getAddress() {
		return this.address;
	}

	public void setAddress(String address) {
		this.address = address;
	}

	@Column(name = "telephone", length = 100)
	public String getTelephone() {
		return this.telephone;
	}

	public void setTelephone(String telephone) {
		this.telephone = telephone;
	}

	@Column(name = "email", length = 100)
	public String getEmail() {
		return this.email;
	}

	public void setEmail(String email) {
		this.email = email;
	}

	@Column(name = "fax", length = 100)
	public String getFax() {
		return this.fax;
	}

	public void setFax(String fax) {
		this.fax = fax;
	}

	@Column(name = "website", length = 100)
	public String getWebsite() {
		return this.website;
	}

	public void setWebsite(String website) {
		this.website = website;
	}

	@Column(name = "type")
	public String getType() {
		return this.type;
	}

	public void setType(String type) {
		this.type = type;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "created", nullable = false, length = 29)
	public Date getCreated() {
		return this.created;
	}

	public void setCreated(Date created) {
		this.created = created;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "updated", nullable = false, length = 29)
	public Date getUpdated() {
		return this.updated;
	}

	public void setUpdated(Date updated) {
		this.updated = updated;
	}

	@Column(name = "active", nullable = false)
	public boolean isActive() {
		return this.active;
	}

	public void setActive(boolean active) {
		this.active = active;
	}

	@Column(name = "updateuser", nullable = false, length = 100)
	public String getUpdateuser() {
		return this.updateuser;
	}

	public void setUpdateuser(String updateuser) {
		this.updateuser = updateuser;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "organizationUnit")
	public Set<ClinicFolder> getClinicFolders() {
		return this.clinicFolders;
	}

	public void setClinicFolders(Set<ClinicFolder> clinicFolders) {
		this.clinicFolders = clinicFolders;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "organizationUnit")
	public Set<PhysicianOrganizationunit> getPhysicianOrganizationunits() {
		return this.physicianOrganizationunits;
	}

	public void setPhysicianOrganizationunits(Set<PhysicianOrganizationunit> physicianOrganizationunits) {
		this.physicianOrganizationunits = physicianOrganizationunits;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "organizationUnit")
	public Set<NurseOrganizationunit> getNurseOrganizationunits() {
		return this.nurseOrganizationunits;
	}

	public void setNurseOrganizationunits(Set<NurseOrganizationunit> nurseOrganizationunits) {
		this.nurseOrganizationunits = nurseOrganizationunits;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "organizationUnit")
	public Set<OrganizationUnit> getOrganizationUnits() {
		return this.organizationUnits;
	}

	public void setOrganizationUnits(Set<OrganizationUnit> organizationUnits) {
		this.organizationUnits = organizationUnits;
	}

}
